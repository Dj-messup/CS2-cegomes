Final Project- CS2                                                                                           100 Points Possible
========================================================================
Final Project




Background:
Create a text based game where the player will navigate through rooms in a dungeon, encounter enemies, collect items and try to beat the final boss. The dungeon layout will be a linked list of room and each room will contain various objects that are defined from different classes.


Tasks:


Core Features:
1. Dungeon Layout (Linked List):
   * Represent each room as a node in a linked list.
   * Each node contains:
      * A description of the room.
      * A pointer to the next room.
      * Dynamic contents (enemy, item, etc.).
2. Player Class:
   * Attributes:
      * name
      * health
      * inventory (a simple array or vector to store collected items).
   * Methods:
      * attack()
      * take_damage(int amount)
      * add_to_inventory(string item)
      * Other methods as needed
3. Enemy Class:
   * Attributes:
      * name
      * health
      * damage
   * Methods:
      * attack()
      * take_damage(int amount)
      * Other methods as needed
4. Item Class:
   * Attributes:
      * name
      * effect (e.g., healing, boosting attack power).
   * Methods:
      * use()
      * Other methods as needed
5. Game Logic:
   * A main game loop that:
      * Displays the current room description and options.
      * Allows the player to choose actions (e.g., move to the next room, fight an enemy, use an item).
      * Handles combat between the player and enemies.
      * Ends the game if the player’s health drops to 0 or if they reach the final treasure.
Implementation Steps
1. Define Classes:
   * Create the classes (Room, Player, Enemy, Item) with appropriate attributes and methods.
   * Use constructors to initialize objects dynamically.
2. Set Up Linked List:
   * Create a Dungeon class to manage the linked list of rooms.
   * Add methods for:
      * Adding new rooms to the dungeon.
      * Traversing the dungeon.
      * Removing enemies/items from rooms dynamically.
3. Game Flow:
   * Start by displaying an introductory story.
   * Create a sequence of rooms (e.g., entrance, hallway, treasure room).
   * Populate rooms with enemies and items.
   * Allow the player to make choices:
      * Fight an enemy: Deduct health points based on damage values.
      * Use items: Update player attributes (e.g., healing).
      * Move to the next room: Traverse to the next node in the linked list.
4. Victory/Defeat Conditions:
   * Victory: Player reaches the treasure room.
   * Defeat: Player’s health drops to 0.
Additional Features (optional)
* Randomize room effects
* Create multiple linked lists to move different directions
* ASCII art