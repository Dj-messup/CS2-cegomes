L4 - CS2 - Doubly Linked List                                                                           100 Points Possible
========================================================================
Doubly Linked List




Background:
We learned singly and doubly linked lists in class along with the theory behind them. You will now implement a templated doubly linked list. It is suggested to start with the constructor and then the empty method.


Tasks:


You will implement a doubly linked list in C++ using a templated List class to store the list with the following operations; empty, size, push_front, pop_front, push_back, pop_back, along with front and back methods. You also will overload == to check that two lists are exactly the same and << to print out the list as space separated.
1. Download skeleton code and all files from: https://github.com/jeremybergen/CSCI112/tree/main/Labs/Lab4 and place it inside of a folder named Lab3 inside of your Labs folder.
2. You are only allowed to modify tree.h functions.
3. Do not add any libraries to any file unless approved ahead of time!
4. To test your code, you can type: make && make run. This will compile your code and run main. The code in main also has a conditional so if you do: make && make test, that will run automated tests
5. When main is run, it will prompt for ints until -999 is entered. Then it will perform different operations on the list.
6. Update README.md
7. Submit screenshot to D2L of program running
8. All code must be uploaded to GitHub
9. Follow standard coding styles including adding comments as necessary to clarify complex sections of code


Example output:
./main.out
Enter -999 to quit entering elements: 42
Enter -999 to quit entering elements: 15
Enter -999 to quit entering elements: 23
Enter -999 to quit entering elements: 9000
Enter -999 to quit entering elements: -1
Enter -999 to quit entering elements: -23
Enter -999 to quit entering elements: 400
Enter -999 to quit entering elements: 5
Enter -999 to quit entering elements: -999
You entered 8 elements.
The first element is: 42
The last element is: 5
The entire list is: 42 15 23 9000 -1 -23 400 5


Removing the first element: 42
Removing the last element: 5
The size of the list now is: 6
The entire list is now: 15 23 9000 -1 -23 400